<?xml version="1.0"?>

<!--
  This is the default configuration file for the xVector Engine Server.
  All standard options are documented here; please read the comments above
  the option before you change it.
  
  Please remember that all element names and argument names are case-sensitive.
  If you want to use the default value, simply set the value in the file to
  "!!default!!"; the server will replace any instance of "!!default!!" with the
  default value.  This is good for using default values that differ between
  platforms (i.e. directory paths, etc.)
  -->

<ServerConfiguration>
    <!--
      Basic Settings
      
      This section contains basic server configuration settings.
          -->
    <General>
        <!--
          Server name as presented to the user.  Set this to whatever you want.
          Maximum length is 64 characters.
              -->
        <ServerName>Change This</ServerName>
        
        <!--
          When the client is sitting on the login screen, it can optionally
          display server news from a remote URL.  The URL can be specified
          here, or left blank to not use this feature.
              -->
        <ServerNewsURL></ServerNewsURL>
        
        <!--
          If you want to disable registration from within the client (i.e. if
          you are using a custom browser-based registration form), set this
          option to True.
          -->
        <DisableRegistration>False</DisableRegistration>
    </General>
    
    <!--
      Database Settings
      
      This section contains the configuration for the database file or server.
      -->
    <Database>
        <!--
          Type
          
          This option allows you to change the type of database used.  You can
          use any database type supported by the SQLAlchemy library.  As a
          general guideline, these databases are officially supported:
          
          sqlite     - This is a file-based database engine that doesn't 
                       require you to run your own database server.  It's good
                       for testing, but you probably shouldn't run a production
                       server with it.
          mysql      - This is the MySQL database server, which you can
                       download and install from http://www.mysql.com.
          postgresql - This is the PostgreSQL database server, which you can
                       download and install from http://www.postgresql.org.
         
          The default is sqlite.
          -->
        <Type>sqlite</Type>
        <!--
          Host
          
          This option specifies the host of the database server.  If you're
          using the sqlite database engine, leave this blank.  You must set
          this option unless you are using the sqlite database; it has no
          default.
          -->
        <Host></Host>
        
        <!--
          Port
          
          This option specifies the port of the database server.  Not used with
          sqlite.  For the other engines, the default value varies with the
          type of database used.
          -->
        <Port>!!default!!</Port>
        
        <!--
          Name
          
          Name of the database to be used.  For sqlite, this is the path to the
          database file.  For other engines, this is the name of the database
          on the server.  The default value is "xvector.sqlite", which refers
          to an sqlite database file in the server's working directory.
          -->
        <Name>xvector.sqlite</Name>
        
        <!--
          Username
          
          For database engines other than sqlite, the username to connect with.
          Not used with sqlite.  Default is blank.
          -->
        <Username></Username>
        
        <!--
          Password
          
          For database engines other than sqlite, the password to connect with.
          Not used with sqlite.  Default is blank.
          -->
        <Password></Password>
    </Database>
    
    <!--
      Resource Settings
      
      This section controls how resources used by the client are made available
      to it.  This includes features such as the auto-updater and in-game map
      file updates.
          -->
    <Resources>
        <!--
          AutoUpdater
          
          The xVector Engine client ships with a built-in automatic updater
          for retrieving updates to game files from a Web server.  This feature
          is disabled by default.
              -->
        <AutoUpdater>
            <!-- Whether or not automatic updates are enabled. -->
            <Enabled>False</Enabled>
            
            <!-- URL of the web directory containing the updates. -->
            <URL>http://www.example.com/updates/</URL>
        </AutoUpdater>
        
        <!--
          By default the xVector Engine client will retrieve map files directly
          from the server.  If you would rather make them available through
          an HTTP server, however, you can change the following settings to do
          so.  (You will still need to set up the HTTP server yourself if you
          do this.)
              -->
        <ExternalMaps>
            <!-- Whether or not maps are kept on another HTTP server. -->
            <Enabled>False</Enabled>
            
            <!-- URL of the web directory containing the maps. -->
            <URL>http://www.example.com/maps/</URL>
        </ExternalMaps>
    </Resources>
    
    <!--
      Network Settings
      
      This section contains basic settings for how the server uses the network.
          -->
    <Network>
        <!--
          The server will bind to these addresses.
          Usually you don't need to change this.
              -->
        <Address>
            <!--
              IPv4 configuration.
              -->
            <IPv4>
                <!-- Use IPv4? (Default: True) -->
                <Enabled>True</Enabled>
                
                <!-- Network interface to bind to (0.0.0.0 for all) -->
                <Interface>0.0.0.0</Interface>
                
                <!-- Port to use (default is 24020) -->
                <Port>24020</Port>
            </IPv4>
            
            <!--
              IPv6 configuration.
              -->
            <IPv6>
                <!-- Use IPv6? (Default: False) -->
                <Enabled>False</Enabled>
                
                <!-- Network interface to bind to (:: for all) -->
                <Interface>::</Interface>
                
                <!-- Port to use (default is 24020) -->
                <Port>24020</Port>
            </IPv6>
        </Address>
        
        <!--
          This next section tells the login server how to behave on the
          network.
          -->
        <LoginServer>
            <!-- Port that the login server binds to (default is 24021) -->
            <Port>24021</Port>
        </LoginServer>

        <!--
          These next settings control how many connections can be made to the
          server, both individually per IP and overall.  Setting these options
          carefully can help to prevent your server from becoming overloaded.
              -->
        <Connections>
            <!-- Maximum number of total connections (default is 50) -->
            <Max>50</Max>
            
            <!-- Maximum number of connections per IP (default is 2) -->
            <PerIP>2</PerIP>
        </Connections>
        
        <!--
          These next settings are advanced options for fine-tuning the behavior
          of the underlying network engine.  If you don't understand what these
          options do, you probably shouldn't touch them.
              -->
        <Engine>
            <!--
              The network engine can use one of several methods to scan the
              network for incoming data.  By default, the engine uses the
              operating system's select() function to check; unfortunately,
              due to how the function works, it quickly becomes inefficient
              as more clients connect.  If you are running the server on a
              Linux server, you have another option: polling objects.
              Polling objects are slower for small numbers of connections,
              but you can drastically cut overhead on servers with many
              connections using them.
              
              Not supported on Windows.  Default is False.
                  -->
            <UsePoll>False</UsePoll>
        </Engine>
    </Network>
    
    <!--
      Log Settings
      
      This section allows you to customize how and where the server stores its
      log files.
          -->
    <Logging>
        <!-- Directory in which log files are stored. -->
        <Directory>!!default!!</Directory>
        
        <!-- Rotating log file settings. -->
        <Rotator>
            <!-- Maximum size of a single log file. -->
            <MaxSize>4194304</MaxSize>
            
            <!-- Number of older log files to keep. -->
            <LogCount>10</LogCount>
        </Rotator>
    </Logging>
</ServerConfiguration>
